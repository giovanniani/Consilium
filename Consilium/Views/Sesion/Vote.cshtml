@model Consilium.Models.Extended.Votacion

@{

    ViewBag.Title = "Votación";
}

<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Consilium - Sesión</title>
    <link href="//maxcdn.bootstrapcdn.com/bootstrap/3.3.0/css/bootstrap.min.css" rel="stylesheet" id="bootstrap-css">
    <link href="~/Content/bootstrap.css" rel="stylesheet" type="text/css" />
    <link href="~/Content/maquetacion.css" rel="stylesheet" type="text/css" />
    <link href="~/Content/encabezado.css" rel="stylesheet" type="text/css" />
    <link rel="stylesheet" href="~/Content/w3.css">
    <script src="~/Scripts/modernizr-2.6.2.js"></script>
</head>



<body>
    @if (HttpContext.Current.User.Identity.Name != "")
        {
            <div id="contenedorVistaParcial">@Html.Partial("_encabezado")</div>
            <div id="content-container1">
                <div id="content-container2">
                    <div id="content">
                        <div style="position: absolute; left: 70%; top: 50%; ">
                            <img src="~/Content/fondo_logo_ic_grande.png" class="pruebaLogo" />
                        </div>
                        <br /> <br />
                        <h2 style="text-align: left; color:#222222; padding-left:4em; font-family:Arial;font-weight:bolder "> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Votar</h2>
                        @if (ViewBag.Status != null && Convert.ToBoolean(ViewBag.Status))
                        {
                            <div class="alert alert-success col-md-6">
                                <strong> ¡La operación se realizó con éxito!</strong>@ViewBag.Message
                            </div>
                        }
                        else
                        {
                            using (Html.BeginForm())
                            {
                                @Html.AntiForgeryToken()


                            <div class="form-horizontal">

                                <hr />
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                <div class="form-group">
                                    @Html.LabelFor(model => model.resultado.fecha, htmlAttributes: new { @class = "control-label col-md-4" })
                                    <div class="col-md-3">
                                        @Html.EditorFor(model => model.resultado.fecha, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.resultado.fecha, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.resultado.votosFavor, htmlAttributes: new { @class = "control-label col-md-4" })
                                    <div class="col-md-3">
                                        @Html.EditorFor(model => model.resultado.votosFavor, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.resultado.votosFavor, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.resultado.votosContra, htmlAttributes: new { @class = "control-label col-md-4" })
                                    <div class="col-md-3">
                                        @Html.EditorFor(model => model.resultado.votosContra, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.resultado.votosContra, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.resultado.votosNulo, htmlAttributes: new { @class = "control-label col-md-4" })
                                    <div class="col-md-3">
                                        @Html.EditorFor(model => model.resultado.votosNulo, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.resultado.votosNulo, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.resultado.votosAbstencion, htmlAttributes: new { @class = "control-label col-md-4" })
                                    <div class="col-md-3">
                                        @Html.EditorFor(model => model.resultado.votosAbstencion, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.resultado.votosAbstencion, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.resultado.anotaciones, htmlAttributes: new { @class = "control-label col-md-4" })
                                    <div class="col-md-3">
                                        @Html.EditorFor(model => model.resultado.anotaciones, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.resultado.anotaciones, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.resultado.resultado, htmlAttributes: new { @class = "control-label col-md-4" })
                                    <div class="col-md-3">
                                        @Html.EditorFor(model => model.resultado.resultado, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.resultado.resultado, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.punto.acuerdos, htmlAttributes: new { @class = "control-label col-md-4" })
                                    <div class="col-md-3">
                                        @Html.EditorFor(model => model.punto.acuerdos, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.punto.acuerdos, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.punto.considerandos, htmlAttributes: new { @class = "control-label col-md-4" })
                                    <div class="col-md-3">
                                        @Html.EditorFor(model => model.punto.considerandos, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.punto.considerandos, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.punto.resultandos, htmlAttributes: new { @class = "control-label col-md-4" })
                                    <div class="col-md-3">
                                        @Html.EditorFor(model => model.punto.resultandos, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.punto.resultandos, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.punto.propuesta, htmlAttributes: new { @class = "control-label col-md-4" })
                                    <div class="col-md-3">
                                        @Html.EditorFor(model => model.punto.propuesta, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.punto.propuesta, "", new { @class = "text-danger" })
                                    </div>
                                </div>


                                @Html.HiddenFor(model => model.resultado.idSesion)
                                @Html.HiddenFor(model => model.resultado.idPunto)
                                @Html.HiddenFor(model => model.punto.idPunto)
                                @Html.HiddenFor(model => model.resultado.quorum)


                                <div class="form-group">
                                    <div class="col-md-offset-4 col-md-10">
                                        <input type="submit" value="Votar" class="w3-button w3-block w3-black" style="width:17% " />
                                    </div>
                                    <div>
                                        @Html.ActionLink("Crear comisión", "createComision", new { id = Model.resultado.idSesion, punto = Model.punto.idPunto, quorum = Model.resultado.quorum })
                                    </div>
                                    <div>
                                        @Html.ActionLink("Regresar", "Active", new { id = Model.resultado.idSesion })
                                    </div>
                                </div>

                            </div>
                                if (ViewBag.Message != null)
                                {
                                    <div class="alert alert-danger col-md-6">
                                        <strong>¡Error!  </strong>@ViewBag.Message
                                    </div>
                                }
                            }

                        }
                        <br /> <br /><br />
                    </div>
                </div>
            </div>

            string[] data = HttpContext.Current.User.Identity.Name.Split('&');
            <div id="navigation-container">
                <div id="navigation">
                    @if (data[2] == "0")
                    {
                        @Html.Partial("_menuSecretaria")
                    }
                    else if (data[2] == "1")
                    {
                        @Html.Partial("_menuPresidente")
                    }
                </div>
            </div>
        }
        else
        {
            <div id="contenedorVistaParcial">@Html.Partial("_noAutorizado")</div>
        }



    </body>
